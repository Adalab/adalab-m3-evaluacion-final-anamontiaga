{"version":3,"sources":["images/logo.png","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Home.js","components/CharacterDetail.js","App.js","services/fetchCharacters.js","index.js"],"names":["module","exports","Filters","props","getCharacterQuery","query","className","type","onChange","value","CharacterCard","image","name","species","src","alt","CharacterList","characters","filter","wantedCharacter","toUpperCase","includes","map","character","key","id","to","Home","Fragment","CharacterDetail","status","origin","episode","deadStatus","length","App","state","bind","this","getCharacters","fetch","then","response","json","data","setState","results","ev","currentTarget","routerProps","parseInt","match","params","find","item","logo","exact","path","render","filteredName","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7ca96982.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheets/Filters.scss\";\n\nconst Filters = props => {\n  const { getCharacterQuery, query } = props;\n  return (\n    <div className=\"character__filters\">\n      <input className=\"character__filter\" type=\"text\" onChange={getCharacterQuery} value={query} />\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  getCharacterQuery: PropTypes.func.isRequired,\n  query: PropTypes.string\n};\n\nexport default Filters;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheets/CharacterCard.scss\";\n\nconst CharacterCard = props => {\n  const { image, name, species } = props;\n\n  return (\n    <div className=\"character__container\">\n      <div className=\"character__img--container\">\n        <img className=\"character__img\" src={image} alt={`We introduce you to ${name}`} />\n      </div>\n      <div className=\"character__card\">\n        <h3 className=\"character__card--name\">{name}</h3>\n        <h5 className=\"character__card--species\">{species}</h5>\n      </div>\n    </div>\n  );\n};\n\nCharacterCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired\n};\n\nexport default CharacterCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CharacterCard from \"./CharacterCard\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/CharacterList.scss\";\n\nconst CharacterList = props => {\n  const { characters, query } = props;\n  return (\n    <ul className=\"characters\">\n      {characters\n        .filter(wantedCharacter => wantedCharacter.name.toUpperCase().includes(query.toUpperCase()))\n        .map(character => {\n          return (\n            <li className=\"character\" key={`key${character.id}`}>\n              <Link to={`/character/${character.id}`} className=\"character__link\">\n                <CharacterCard image={character.image} name={character.name} species={character.species} />\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nCharacterList.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string.isRequired,\n  wantedCharacter: PropTypes.object.isRequired,\n  character: PropTypes.object.isRequired,\n  id: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  species: PropTypes.object.isRequired\n};\n\nexport default CharacterList;\n","import React from \"react\";\nimport Filters from \"./Filters\";\nimport CharacterList from \"./CharacterList\";\nimport PropTypes from \"prop-types\";\n\nconst Home = props => {\n  const { getCharacterQuery, query, characters } = props;\n  return (\n    <React.Fragment>\n      <Filters getCharacterQuery={getCharacterQuery} value={query} />\n      <CharacterList characters={characters} query={query} value={query} />\n    </React.Fragment>\n  );\n};\n\nHome.propTypes = {\n  getCharacterQuery: PropTypes.func.isRequired,\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  query: PropTypes.string\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheets/CharacterDetail.scss\";\n\nconst CharacterDetail = props => {\n  if (props.character) {\n    const { image, name, species, status, origin, episode } = props.character;\n\n    const deadStatus = `${status}` === \"Dead\" ? <i className=\"fas fa-skull-crossbones\"></i> : ` Alive`;\n\n    return (\n      <React.Fragment>\n        <div className=\"character__detail--column\">\n          <div className=\"character__detail\">\n            <Link to=\"/\" className=\"character__detail--link\">\n              {\"<\"} Volver{\" \"}\n            </Link>\n\n            <div className=\"character__detail--container\">\n              <div className=\"character__detail--img--container\">\n                <img className=\"character__detail--img\" src={image} alt={`We introduce you to ${name}`} />\n              </div>\n              <div className=\"character__detail--info\">\n                <h3 className=\"character__detail--name\">{name}</h3>\n                <div className=\"character__detail--status--container\">\n                  <p className=\"character__detail--status\">\n                    <b>Status:</b> {deadStatus}\n                  </p>\n                </div>\n                <p className=\"character__detail--species\">\n                  <b>Species: </b>\n                  {species}\n                </p>\n                <p className=\"character__detail--origin\">\n                  <b>Origin: </b>\n                  {origin.name}\n                </p>\n                <p className=\"character__detail--episode\">\n                  <b>Episode: </b>\n                  {episode.length}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <Link to=\"/\" className=\"character__error--back\">\n          Anda, vuelve...\n        </Link>\n        <div className=\"character__error--img\">\n          <img src=\"https://media.giphy.com/media/3o85xxmivRBMAw9Uqs/giphy.gif\" alt=\"Anda, vuelve\" />\n        </div>\n      </React.Fragment>\n    );\n  }\n};\n\nCharacterDetail.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  character: PropTypes.object.isRequired,\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  origin: PropTypes.string.isRequired,\n  episode: PropTypes.string.isRequired,\n  deadStatus: PropTypes.string.isRequired\n};\n\nexport default CharacterDetail;\n","import React from \"react\";\nimport \"./stylesheets/App.scss\";\nimport { fetchCharacters } from \"./services/fetchCharacters\";\nimport logo from \"./images/logo.png\";\nimport Home from \"./components/Home\";\nimport CharacterDetail from \"./components/CharacterDetail\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./stylesheets/App.scss\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      characters: [],\n      query: \"\"\n    };\n    this.getCharacterQuery = this.getCharacterQuery.bind(this);\n  }\n  componentDidMount() {\n    this.getCharacters();\n  }\n\n  getCharacters() {\n    fetchCharacters().then(data => {\n      this.setState({ characters: data.results });\n    });\n  }\n\n  getCharacterQuery(ev) {\n    const query = ev.currentTarget.value;\n    this.setState({ query: query });\n  }\n\n  filteredName(routerProps) {\n    const id = parseInt(routerProps.match.params.id);\n    return this.state.characters.find(item => item.id === id);\n  }\n\n  render() {\n    const { characters, query } = this.state;\n    return (\n      <div className=\"app\">\n        <div className=\"app__logo\">\n          <img src={logo} alt=\"Welcome to Rick and Morty world\" className=\"app__logo--img\" />\n        </div>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <Home getCharacterQuery={this.getCharacterQuery} characters={characters} query={query} value={query} />;\n            }}\n          />\n          <Route\n            path=\"/character/:id\"\n            render={routerProps => {\n              return <CharacterDetail character={this.filteredName(routerProps)} />;\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const endpoint = \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\";\n\nconst fetchCharacters = () => {\n  return fetch(endpoint).then(response => response.json());\n};\n\nexport { fetchCharacters };\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}